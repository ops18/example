name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  go-test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
        
    - name: Build 
      run: go build .
      
    - name: Test code
      run: go test .
    
    - name: Run
      run: go run hello.go
      
  Docker-Lint:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: go-test
    steps:
      - uses: actions/checkout@v2 
      - uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: ./Dockerfile
      
  Docker-build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: Docker-Lint
    #permissions:
    #  contents: 'read'
    #  id-token: 'write'
    env:
      IMAGE_NAME: gcr.io/ingka-apim-global-dev/go-code
    steps:
    - name: Update tag to GIT_SHA env property with commit short sha
      run: echo "GIT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      id: version
     
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: build local container
      uses: docker/build-push-action@v2
      id: build
      with:
        tags: $IMAGE_NAME:${{ env.GIT_SHA }}
        push: false
        load: true  
        
    - name: Scan image
      uses: anchore/scan-action@v3
      id: scan
      with:
        image: "$IMAGE_NAME:${{ env.GIT_SHA }}"
        acs-report-enable: true
        severity-cutoff: critical
        fail-build: false
        debug: true
    
    - name: Inspect action SARIF report
      run: cat ${{ steps.scan.outputs.sarif }}
########################----------Cloud Run Configuration------------------############################### 
    #- id: 'auth'
    #  name: 'Authenticate to Google Cloud'
    #  uses: 'google-github-actions/auth@v0'
    #  with:
    #    workload_identity_provider: ${{secrets.WIP_PROVIDER}}
    #    service_account: ${{secrets.WIP_SA}}
                     
    #- name: Configure Docker Authentication
    #  run: gcloud auth configure-docker --quiet

    #- name: Push Docker image to GCR
    #  run: docker push $IMAGE_NAME:${{ env.GIT_SHA }}

    #- name: Deploy kong gateway to cloud run
    #  id: deploy
    #  run: gcloud run deploy go-code --image=$IMAGE_NAME:${{ env.GIT_SHA }}  --memory 1Gi --cpu 1 --timeout=30 --min-instances=1 --max-instances=100 --concurrency=80 --vpc-connector=projects/ingka-apim-global-dev/locations/europe-west4/connectors/kong-gw-cloudrun --platform=managed --allow-unauthenticated --region=europe-west4 --project=ingka-apim-global-dev --vpc-egress=all-traffic --port=8000
    ########################----------Cloud Run Configuration------------------############################### 
